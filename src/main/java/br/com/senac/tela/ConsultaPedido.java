/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.senac.tela;

import br.com.senac.dao.ClienteDao;
import br.com.senac.dao.ClienteDaoImpl;
import br.com.senac.dao.HibernateUtil;
import br.com.senac.dao.PedidoDao;
import br.com.senac.dao.PedidoDaoImpl;
import br.com.senac.entidade.Cliente;
import br.com.senac.entidade.Pedido;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;

/**
 *
 * @author Vítor
 */
public class ConsultaPedido extends javax.swing.JInternalFrame {

    /**
     * Creates new form ConsultaPedido
     */
    private Session session;
    private Cliente cliente;
    private ClienteDao clienteDao;
    private PedidoDao pedidoDao;
    private DefaultTableModel tabelaModelo;
    private List<Cliente> clientes;
    private List<Pedido> pedidos;
    DateFormat dataNova = new SimpleDateFormat("dd/MM/yyyy");
    DateFormat dataAntiga = new SimpleDateFormat("yyyy-MM-dd");
    DateFormat formHora = new SimpleDateFormat("HH:mm:ss");

    public ConsultaPedido() {
        initComponents();
        clienteDao = new ClienteDaoImpl();
        pedidoDao = new PedidoDaoImpl();
        tabelaModelo = (DefaultTableModel) tabelaPedidos.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbAskNome = new javax.swing.JLabel();
        lbTelefone = new javax.swing.JLabel();
        varAskTelefone = new javax.swing.JFormattedTextField();
        varAskNome = new javax.swing.JTextField();
        btBuscar = new javax.swing.JButton();
        btLimpar = new javax.swing.JButton();
        lbTelefone1 = new javax.swing.JLabel();
        varDataIni = new javax.swing.JFormattedTextField();
        varDataFim = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaPedidos = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Consulta Pedidos");

        lbAskNome.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbAskNome.setForeground(new java.awt.Color(0, 0, 0));
        lbAskNome.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbAskNome.setText("Nome:");
        lbAskNome.setAutoscrolls(true);
        lbAskNome.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lbTelefone.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbTelefone.setForeground(new java.awt.Color(0, 0, 0));
        lbTelefone.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbTelefone.setText("Telefone:");
        lbTelefone.setAutoscrolls(true);
        lbTelefone.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        varAskTelefone.setBackground(new java.awt.Color(255, 255, 255));
        varAskTelefone.setForeground(new java.awt.Color(0, 0, 0));
        try {
            varAskTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) #####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        varAskNome.setBackground(new java.awt.Color(255, 255, 255));
        varAskNome.setForeground(new java.awt.Color(0, 0, 0));

        btBuscar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btBuscar.setForeground(new java.awt.Color(0, 0, 0));
        btBuscar.setIcon(new javax.swing.ImageIcon("C:\\Users\\Vítor\\Downloads\\pesquisa-de-lupa.png")); // NOI18N
        btBuscar.setText("Buscar");
        btBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarActionPerformed(evt);
            }
        });

        btLimpar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btLimpar.setForeground(new java.awt.Color(0, 0, 0));
        btLimpar.setIcon(new javax.swing.ImageIcon("C:\\Users\\Vítor\\Downloads\\limpar-limpo.png")); // NOI18N
        btLimpar.setText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        lbTelefone1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbTelefone1.setForeground(new java.awt.Color(0, 0, 0));
        lbTelefone1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbTelefone1.setText("Data:");
        lbTelefone1.setAutoscrolls(true);
        lbTelefone1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        varDataIni.setBackground(new java.awt.Color(255, 255, 255));
        varDataIni.setForeground(new java.awt.Color(0, 0, 0));
        try {
            varDataIni.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        varDataFim.setBackground(new java.awt.Color(255, 255, 255));
        varDataFim.setForeground(new java.awt.Color(0, 0, 0));
        try {
            varDataFim.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("á");

        tabelaPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome Cliente", "Informações Pedido", "Valor", "Data", "Cupom"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaPedidos);

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 0));
        jLabel2.setText("Preencha a data de inicio e fim!");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbTelefone)
                    .addComponent(lbAskNome, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTelefone1))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(varAskNome)
                            .addComponent(varAskTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(varDataIni, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(varDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(jSeparator1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbAskNome)
                            .addComponent(varAskNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(varAskTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbTelefone))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbTelefone1)
                            .addComponent(varDataIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(varDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarActionPerformed
        tabelaModelo.setNumRows(0);
        if (!varAskNome.getText().trim().isEmpty()) {
            try {
                session = HibernateUtil.abrirConexao();
                clientes = clienteDao.askPerNamePed(varAskNome.getText().trim(), session);
                popularTabela(clientes);
            } catch (Exception e) {
                System.out.println("Erro ao pesquisar Nome " + e.getMessage());
            } finally {
                session.close();
            }
            
        } else if (varAskTelefone.getText().trim().length() > 11) {
            try {
                session = HibernateUtil.abrirConexao();
                clientes = clienteDao.askPerTellPed(varAskTelefone.getText().trim(), session);
                popularTabela(clientes);
            } catch (Exception e) {
                System.out.println("Erro ao pesquisar por Telefone " + e.getMessage());
            } finally {
                session.close();
            }
            
        } else if (!varDataIni.getText().isEmpty() || !varDataFim.getText().isEmpty()) {
            
            try {
                session = HibernateUtil.abrirConexao();
                pedidos = pedidoDao.askPerDate(dataNova.parse(varDataIni.getText()), dataNova.parse(varDataFim.getText()), session);
            } catch (Exception e) {
                System.out.println("Erro ao pesquisar por Data" + e.getMessage());
            } finally {
                session.close();
            }
            tabelaModelo.setNumRows(0);
            
            for (Pedido pedido : pedidos) {
                String dta = pedido.getDt_pedido().toString();
                String dat = "";
                try {
                    dat = dataNova.format(dataAntiga.parse(dta));
                } catch (ParseException ex) {
                    System.out.println("Erro ao converter data " + ex.getMessage());
                }
                String hr = pedido.getHora_pedido().toString();
                tabelaModelo.addRow(new Object[]{pedido.getCliente().getNome(), pedido.getInf_pedidos(), pedido.getValorTotal(), dat + " - " + hr , pedido.getCupom()});
            }
        }
        
        else {
            JOptionPane.showMessageDialog(null, "Informe um Filtro para Prosseguir");
        }
    }//GEN-LAST:event_btBuscarActionPerformed

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        varAskNome.setText("");
        varAskTelefone.setText("");
        varDataFim.setText("");
        varDataIni.setText("");
        // Limpando a tabelaModelo
        tabelaModelo.setNumRows(0);
    }//GEN-LAST:event_btLimparActionPerformed

    public void popularTabela(List<Cliente> cliente) throws ParseException {
        // Limpando a tabelaModelo
        tabelaModelo.setNumRows(0);
        for (Cliente client : clientes) {
            for (Pedido pedi : client.getPedidos()) {
                String dt = pedi.getDt_pedido().toString();
                String dat = dataNova.format(dataAntiga.parse(dt));
                String hr = pedi.getHora_pedido().toString();
                tabelaModelo.addRow(new Object[]{pedi.getCliente().getNome(), pedi.getInf_pedidos(), pedi.getValorTotal(), dat + " - " + hr, pedi.getCupom()});
            }
            
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBuscar;
    private javax.swing.JButton btLimpar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbAskNome;
    private javax.swing.JLabel lbTelefone;
    private javax.swing.JLabel lbTelefone1;
    private javax.swing.JTable tabelaPedidos;
    private javax.swing.JTextField varAskNome;
    private javax.swing.JFormattedTextField varAskTelefone;
    private javax.swing.JFormattedTextField varDataFim;
    private javax.swing.JFormattedTextField varDataIni;
    // End of variables declaration//GEN-END:variables
}
